// Settings for TFT
#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_ST7735.h> // Hardware-specific library for ST7735
#include <Adafruit_ST7789.h> // Hardware-specific library for ST7789
#include <SPI.h>
#include <string.h>


#if defined(ARDUINO_FEATHER_ESP32) // Feather Huzzah32
  #define TFT_CS         14
  #define TFT_RST        15
  #define TFT_DC         32

#elif defined(ESP8266)
  #define TFT_CS         4
  #define TFT_RST        16                                            
  #define TFT_DC         5

#else
  // For the breakout board, you can use any 2 or 3 pins.
  // These pins will also work for the 1.8" TFT shield.
  #define TFT_CS        10
  #define TFT_RST        9 // Or set to -1 and connect to Arduino RESET pin
  #define TFT_DC         8
#endif

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);

// SPEAKER SETTINGS
int speakerPin=4;
char notes[]="cdefgabCbagdedc";
int beats[]= {1,1,1,1,1,1,2,1,1,1,1,2,4,8,4};
int tempo=300;

// ULtRASSONS SETTINGS
#define trigPin 3
#define echoPin 2

//BUTTONS SETTINGS
const int botaoAlarm = 6;
const int botaoSettings = 7;

//MILLIS SETTINGS
unsigned long startMillis;
unsigned long currentMillis;

//CLOCK SETTINGS
unsigned long h=0;
unsigned long m=0;
int s=0;
unsigned long d=1;
//Time Variables
int HauxI=0;
int HauxF=0;
int MauxI=0;
int MauxF=0;
int timemode=0;

// GLOBAL VARIABLES
int modoAlarme=0;
int luz=1;
int ldrmode=0;

//Report variables
int ReportHour[10];
int ReportMin[10];
int ReportDay[10];
int ReportNum;
int alarmNum=0;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  tft.initR(INITR_144GREENTAB);
  pinMode(speakerPin, OUTPUT);
  pinMode(trigPin, OUTPUT);
	pinMode(echoPin, INPUT);
  pinMode(botaoAlarm,INPUT);
  startMillis=millis();
}


// ULTRASSONS FUNCTION
long measureDistance() {
	long duration, distance;
  //Send pulse
	digitalWrite(trigPin, LOW);
	delayMicroseconds(2);
	digitalWrite(trigPin, HIGH);
	delayMicroseconds(10);
	digitalWrite(trigPin, LOW);
  //Wait for echo and measure time until it happens
	duration = pulseIn(echoPin, HIGH);
	//Compute distance
	distance = duration/58;
  return distance;
}


//SPEAKER FUNCTIONS
void playTone(int tone, int duration){              
  for(long i=0; i<duration*1000L; i+= tone*2) {
    digitalWrite(speakerPin, HIGH);
    delayMicroseconds(tone);
    digitalWrite(speakerPin, LOW);
    delayMicroseconds(tone);
  }
}

void playNote(char note, int duration){                
  char names[]={'c','d','e','f','g', 'a', 'b', 'C' };
  int tones[]={1915,1700,1519,1432,1275,1136,1014,956};
  for(int i=0; i<8; i++)
    if(names[i] == note)
      playTone(tones[i],duration);
}

//BACKGROUND IMAGE
const uint16_t background[5072] PROGMEM={
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5,   // 0x0010 (16) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0020 (32) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0030 (48) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0040 (64) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3,   // 0x0050 (80) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x0060 (96) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93,   // 0x0070 (112) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x0080 (128) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2A72, 0x2A72, 0x2272, 0x2272, 0x2272, 0x2251, 0x2251, 0x2251,   // 0x0090 (144) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x00A0 (160) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x00B0 (176) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x00C0 (192) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30,   // 0x00D0 (208) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x00E0 (224) pixels
0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5,   // 0x00F0 (240) pixels
0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0100 (256) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0110 (272) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0120 (288) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3,   // 0x0130 (304) pixels
0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293,   // 0x0140 (320) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x0150 (336) pixels
0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x0160 (352) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2A72, 0x2A72, 0x2272, 0x2272, 0x2272, 0x2251, 0x2251,   // 0x0170 (368) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0180 (384) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0190 (400) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x01A0 (416) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30,   // 0x01B0 (432) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x01C0 (448) pixels
0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5,   // 0x01D0 (464) pixels
0x2AD5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x01E0 (480) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x01F0 (496) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0200 (512) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3,   // 0x0210 (528) pixels
0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293,   // 0x0220 (544) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x0230 (560) pixels
0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x0240 (576) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2A72, 0x2A72, 0x2272, 0x2272, 0x2272, 0x2251,   // 0x0250 (592) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0260 (608) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0270 (624) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0280 (640) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30,   // 0x0290 (656) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x02A0 (672) pixels
0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5,   // 0x02B0 (688) pixels
0x2AD5, 0x2AD5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x02C0 (704) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x02D0 (720) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x02E0 (736) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3,   // 0x02F0 (752) pixels
0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293,   // 0x0300 (768) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x0310 (784) pixels
0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x0320 (800) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2A72, 0x2A72, 0x2272, 0x2272, 0x2272,   // 0x0330 (816) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0340 (832) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0350 (848) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0360 (864) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30,   // 0x0370 (880) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x0380 (896) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5,   // 0x0390 (912) pixels
0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x03A0 (928) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x03B0 (944) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x03C0 (960) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x03D0 (976) pixels
0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x03E0 (992) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x03F0 (1008) pixels
0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x0400 (1024) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2A72, 0x2A72, 0x2272, 0x2272,   // 0x0410 (1040) pixels
0x2272, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0420 (1056) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0430 (1072) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0440 (1088) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30,   // 0x0450 (1104) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x0460 (1120) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5,   // 0x0470 (1136) pixels
0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0480 (1152) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0490 (1168) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x04A0 (1184) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93,   // 0x04B0 (1200) pixels
0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x04C0 (1216) pixels
0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x04D0 (1232) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2252, 0x2252, 0x2252,   // 0x04E0 (1248) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2A72, 0x2A72, 0x2272,   // 0x04F0 (1264) pixels
0x2272, 0x2272, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0500 (1280) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2251, 0x2251, 0x2251,   // 0x0510 (1296) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0520 (1312) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30,   // 0x0530 (1328) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x0540 (1344) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x2AD5,   // 0x0550 (1360) pixels
0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0560 (1376) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0570 (1392) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0580 (1408) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93,   // 0x0590 (1424) pixels
0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x05A0 (1440) pixels
0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x05B0 (1456) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2252, 0x2252,   // 0x05C0 (1472) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2A72, 0x2A72,   // 0x05D0 (1488) pixels
0x2272, 0x2272, 0x2272, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x05E0 (1504) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2251, 0x2251,   // 0x05F0 (1520) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0600 (1536) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30,   // 0x0610 (1552) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x0620 (1568) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5,   // 0x0630 (1584) pixels
0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0640 (1600) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0650 (1616) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0660 (1632) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2A93,   // 0x0670 (1648) pixels
0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0680 (1664) pixels
0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x0690 (1680) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2252,   // 0x06A0 (1696) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2A72,   // 0x06B0 (1712) pixels
0x2A72, 0x2272, 0x2272, 0x2272, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x06C0 (1728) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2251,   // 0x06D0 (1744) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x06E0 (1760) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30,   // 0x06F0 (1776) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x0700 (1792) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x0710 (1808) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0720 (1824) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0730 (1840) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0740 (1856) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3,   // 0x0750 (1872) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0760 (1888) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x0770 (1904) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73,   // 0x0780 (1920) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272,   // 0x0790 (1936) pixels
0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2271, 0x2271, 0x2271, 0x2271, 0x2271, 0x2251, 0x2251, 0x2251,   // 0x07A0 (1952) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x07B0 (1968) pixels
0x2231, 0x2231, 0x2231, 0x2231, 0x2231, 0x2231, 0x2231, 0x2231, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x07C0 (1984) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x07D0 (2000) pixels
0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x07E0 (2016) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x07F0 (2032) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0800 (2048) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0810 (2064) pixels
0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0820 (2080) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3,   // 0x0830 (2096) pixels
0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0840 (2112) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293,   // 0x0850 (2128) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73,   // 0x0860 (2144) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272,   // 0x0870 (2160) pixels
0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2271, 0x2271, 0x2271, 0x2271, 0x2271, 0x2251, 0x2251,   // 0x0880 (2176) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0890 (2192) pixels
0x2251, 0x2231, 0x2231, 0x2231, 0x2231, 0x2231, 0x2231, 0x2231, 0x2231, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x08A0 (2208) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2230, 0x2230, 0x2230,   // 0x08B0 (2224) pixels
0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230,   // 0x08C0 (2240) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x08D0 (2256) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x08E0 (2272) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x08F0 (2288) pixels
0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0900 (2304) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0910 (2320) pixels
0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0920 (2336) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293,   // 0x0930 (2352) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73,   // 0x0940 (2368) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272,   // 0x0950 (2384) pixels
0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2271, 0x2271, 0x2271, 0x2271, 0x2271, 0x2251,   // 0x0960 (2400) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0970 (2416) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0980 (2432) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2230, 0x2230,   // 0x0990 (2448) pixels
0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230,   // 0x09A0 (2464) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x09B0 (2480) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x09C0 (2496) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x09D0 (2512) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x09E0 (2528) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x09F0 (2544) pixels
0x2AB4, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0A00 (2560) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293,   // 0x0A10 (2576) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73,   // 0x0A20 (2592) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272,   // 0x0A30 (2608) pixels
0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2271, 0x2271, 0x2271, 0x2271, 0x2271,   // 0x0A40 (2624) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0A50 (2640) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0A60 (2656) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2230,   // 0x0A70 (2672) pixels
0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x2230,   // 0x0A80 (2688) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x0A90 (2704) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x32D4, 0x32D4, 0x32D4,   // 0x0AA0 (2720) pixels
0x32D4, 0x32D4, 0x32D4, 0x32D4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0AB0 (2736) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0AC0 (2752) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0AD0 (2768) pixels
0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0AE0 (2784) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0AF0 (2800) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73,   // 0x0B00 (2816) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x0B10 (2832) pixels
0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2271, 0x2271, 0x2271, 0x2271,   // 0x0B20 (2848) pixels
0x2271, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0B30 (2864) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0B40 (2880) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231,   // 0x0B50 (2896) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30,   // 0x0B60 (2912) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x0B70 (2928) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x32D4, 0x32D4,   // 0x0B80 (2944) pixels
0x32D4, 0x32D4, 0x32D4, 0x32D4, 0x32D4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0B90 (2960) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0BA0 (2976) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0BB0 (2992) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93,   // 0x0BC0 (3008) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0BD0 (3024) pixels
0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73,   // 0x0BE0 (3040) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252,   // 0x0BF0 (3056) pixels
0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2271, 0x2271, 0x2271,   // 0x0C00 (3072) pixels
0x2271, 0x2271, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0C10 (3088) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0C20 (3104) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0C30 (3120) pixels
0x2231, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30,   // 0x0C40 (3136) pixels
0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5, 0x2AF5,   // 0x0C50 (3152) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5, 0x32D4,   // 0x0C60 (3168) pixels
0x32D4, 0x32D4, 0x32D4, 0x32D4, 0x32D4, 0x32D4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0C70 (3184) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0C80 (3200) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0C90 (3216) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93,   // 0x0CA0 (3232) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93,   // 0x0CB0 (3248) pixels
0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73,   // 0x0CC0 (3264) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252,   // 0x0CD0 (3280) pixels
0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2271, 0x2271,   // 0x0CE0 (3296) pixels
0x2271, 0x2271, 0x2271, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0CF0 (3312) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0D00 (3328) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0D10 (3344) pixels
0x2251, 0x2231, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30,   // 0x0D20 (3360) pixels
0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2AF5,   // 0x0D30 (3376) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AD5, 0x2AD5,   // 0x0D40 (3392) pixels
0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0D50 (3408) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0D60 (3424) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0D70 (3440) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93,   // 0x0D80 (3456) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93,   // 0x0D90 (3472) pixels
0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73,   // 0x0DA0 (3488) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252,   // 0x0DB0 (3504) pixels
0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272,   // 0x0DC0 (3520) pixels
0x2272, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0DD0 (3536) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0DE0 (3552) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0DF0 (3568) pixels
0x2251, 0x2251, 0x2231, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x1A30,   // 0x0E00 (3584) pixels
0x1A30, 0x1A30, 0x1A30, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230,   // 0x0E10 (3600) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x0E20 (3616) pixels
0x32F5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32B5, 0x32D4, 0x32B5, 0x32B4, 0x32B4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0E30 (3632) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0E40 (3648) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0E50 (3664) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3,   // 0x0E60 (3680) pixels
0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2292, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3,   // 0x0E70 (3696) pixels
0x2292, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2272, 0x2272, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93,   // 0x0E80 (3712) pixels
0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72,   // 0x0E90 (3728) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272,   // 0x0EA0 (3744) pixels
0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2252, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0EB0 (3760) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0EC0 (3776) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0ED0 (3792) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2230, 0x2231, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30,   // 0x0EE0 (3808) pixels
0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x222F, 0x222F, 0x222F, 0x222F, 0x222F, 0x222F,   // 0x0EF0 (3824) pixels
0x2230, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x0F00 (3840) pixels
0x2AF5, 0x32D6, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32B5, 0x32B5, 0x32B5, 0x32B4, 0x32B4, 0x32B4, 0x2AB4,   // 0x0F10 (3856) pixels
0x2AB4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x0F20 (3872) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0F30 (3888) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x0F40 (3904) pixels
0x2AB4, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB2,   // 0x0F50 (3920) pixels
0x2AB3, 0x2292, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2272, 0x2272, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x0F60 (3936) pixels
0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72, 0x2A72,   // 0x0F70 (3952) pixels
0x2A72, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x0F80 (3968) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2252, 0x2252, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0F90 (3984) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0FA0 (4000) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x0FB0 (4016) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2231, 0x2230, 0x2230, 0x2230, 0x1A30,   // 0x0FC0 (4032) pixels
0x1A30, 0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A2F, 0x1A2F, 0x1A2F, 0x1A2F, 0x1A2F,   // 0x0FD0 (4048) pixels
0x1A2F, 0x1A30, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x0FE0 (4064) pixels
0x2AF5, 0x2AF5, 0x32D6, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32B5, 0x32B5, 0x32B5, 0x32B4, 0x32B4,   // 0x0FF0 (4080) pixels
0x32B4, 0x32B4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x1000 (4096) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x1010 (4112) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x1020 (4128) pixels
0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3,   // 0x1030 (4144) pixels
0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x1040 (4160) pixels
0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72, 0x2A72,   // 0x1050 (4176) pixels
0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x1060 (4192) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2252, 0x2252, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1070 (4208) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1080 (4224) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1090 (4240) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231, 0x2231, 0x2230, 0x2230,   // 0x10A0 (4256) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A2F, 0x1A2F, 0x1A2F, 0x1A2F,   // 0x10B0 (4272) pixels
0x1A2F, 0x1A2F, 0x1A30, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x10C0 (4288) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x32D6, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32B5, 0x32D4,   // 0x10D0 (4304) pixels
0x32B4, 0x32B4, 0x32B4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x10E0 (4320) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x10F0 (4336) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x1100 (4352) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3,   // 0x1110 (4368) pixels
0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x1120 (4384) pixels
0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72, 0x2A72,   // 0x1130 (4400) pixels
0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x1140 (4416) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2252, 0x2251, 0x2251, 0x2251,   // 0x1150 (4432) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1160 (4448) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1170 (4464) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2231, 0x2231,   // 0x1180 (4480) pixels
0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A2F, 0x1A2F, 0x1A2F,   // 0x1190 (4496) pixels
0x1A2F, 0x1A2F, 0x1A2F, 0x1A30, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x11A0 (4512) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x32F6, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5,   // 0x11B0 (4528) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x11C0 (4544) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x11D0 (4560) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x11E0 (4576) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3,   // 0x11F0 (4592) pixels
0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x1200 (4608) pixels
0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A72,   // 0x1210 (4624) pixels
0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252, 0x2252,   // 0x1220 (4640) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2251,   // 0x1230 (4656) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1240 (4672) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1250 (4688) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1260 (4704) pixels
0x2231, 0x2231, 0x2231, 0x2230, 0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A2F, 0x1A2F,   // 0x1270 (4720) pixels
0x1A2F, 0x1A2F, 0x1A2F, 0x1A2F, 0x1A30, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x1280 (4736) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x32F6, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5,   // 0x1290 (4752) pixels
0x32D5, 0x32D5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x12A0 (4768) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x12B0 (4784) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x12C0 (4800) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2AB3, 0x2AB3,   // 0x12D0 (4816) pixels
0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2293,   // 0x12E0 (4832) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73,   // 0x12F0 (4848) pixels
0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2A72, 0x2252, 0x2252, 0x2252,   // 0x1300 (4864) pixels
0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2252, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272, 0x2272,   // 0x1310 (4880) pixels
0x2272, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1320 (4896) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1330 (4912) pixels
0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251, 0x2251,   // 0x1340 (4928) pixels
0x2251, 0x2251, 0x2231, 0x2231, 0x2231, 0x2230, 0x2230, 0x2230, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A30, 0x1A2F,   // 0x1350 (4944) pixels
0x1A2F, 0x1A2F, 0x1A2F, 0x1A2F, 0x1A2F, 0x1A30, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5,   // 0x1360 (4960) pixels
0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x2AF5, 0x32F6, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x32D5,   // 0x1370 (4976) pixels
0x32D5, 0x32D5, 0x32D5, 0x32D5, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4,   // 0x1380 (4992) pixels
0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AD4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x1390 (5008) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4,   // 0x13A0 (5024) pixels
0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB4, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93,   // 0x13B0 (5040) pixels
0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2AB3, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2A93, 0x2293, 0x2293, 0x2293,   // 0x13C0 (5056) pixels
0x2293, 0x2293, 0x2293, 0x2293, 0x2293, 0x2A93, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73, 0x2A73,   // 0x13D0 (5072) pixels
};


// PRINT/DISPLAY FUNCTIONS
void displayAlarm(int16_t x, int16_t y,uint8_t size, uint16_t color){
  tft.setCursor(x,y);
  tft.setTextColor(color);
  tft.setTextSize(size);
  tft.print("Alarme");
};

void displaySettings(int16_t x, int16_t y,uint8_t size, uint16_t color){
  tft.setCursor(x,y);
  tft.setTextColor(color);
  tft.setTextSize(size);
  tft.print("Settings");
};

void displayCam(int16_t x, int16_t y,uint8_t size, uint16_t color){
  tft.setCursor(x,y);
  tft.setTextColor(color);
  tft.setTextSize(size);
  tft.print("Cam");
};

void displayModoNoturno(int16_t x, int16_t y,uint8_t size, uint16_t color){
  tft.setCursor(x,y);
  tft.setTextColor(color);
  tft.setTextSize(size);
  tft.print("Modo Noturno");
};

void displayCalendario(int16_t x, int16_t y,uint8_t size, uint16_t color){
  tft.setCursor(x,y);
  tft.setTextColor(color);
  tft.setTextSize(size);
  tft.print("Calendario");
};

void displayHorario(int16_t x, int16_t y,uint8_t size, uint16_t color){
  tft.setCursor(x,y);
  tft.setTextColor(color);
  tft.setTextSize(size);
  tft.print("Horario");
};

void displayONorOFF(int16_t x, int16_t y,uint8_t size, uint16_t color){
  if(modoAlarme==0 && timemode==0 && luz==1){
    tft.setCursor(x,y);
    tft.setTextColor(color);
    tft.setTextSize(size);
    tft.print("OFF");
  }
  else{
    tft.setCursor(x,y);
    tft.setTextColor(color);
    tft.setTextSize(size);
    tft.print("ON");
  }  
};

void displayClock(){
  tft.fillRect(5,5,120,24,ST77XX_BLUE);
  //hours
  tft.setCursor(50,10);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(1);
  tft.print(h);
  //:
  tft.setCursor(56,10);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(1);
  tft.print(":");
  //minutes
  tft.setCursor(68,10);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(1);
  tft.print(m);
}

void settingsMenu(){
  tft.fillScreen(ST77XX_BLUE);
  // Report
  tft.setCursor(10,30);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print("Report");
  // OnlyNight Alarm ON
  tft.setCursor(10,60);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  if(ldrmode==0){
    tft.print("Night OFF");
  }else tft.print("Night ON");
  // Clock
  tft.setCursor(10,90);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print("Clock");
  //Back
  tft.setCursor(10, 110);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(1);
  tft.print("Back");
}

void ReportMenu(){
  // Will show 10 last reports
  // Day 1/12/2222 Report movement at 08:20
  int ReportExit=0;
  tft.fillScreen(ST77XX_BLUE);
  //Back
  tft.setCursor(10,110);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(1);
  tft.print("Back");
  int y=20;
  for(int i=0;i<ReportNum;i++){
        tft.setCursor(5,y);
        tft.setTextColor(ST77XX_WHITE);
        tft.setTextSize(1);
        tft.print("Date :");
        tft.print(ReportDay[i]);
        tft.print(" /12/2022");
        // Report movement at
        tft.setCursor(5,y+9);
        tft.setTextColor(ST77XX_WHITE);
        tft.setTextSize(1);
        tft.print("Report movement at:");
        // hours and mins
        tft.setCursor(5,y+18);
        tft.setTextColor(ST77XX_WHITE);
        tft.setTextSize(1);
        tft.print(ReportHour[i]);
        tft.setCursor(20,y+18);
        tft.setTextColor(ST77XX_WHITE);
        tft.setTextSize(1);
        tft.print(":");
        tft.setCursor(31,y+18);
        tft.setTextColor(ST77XX_WHITE);
        tft.setTextSize(1);
        tft.print(ReportMin[i]);
        y=y+40;   
  }
}



void startMenu(){
  tft.fillScreen(ST77XX_BLUE);
  displayAlarm(10,30,2,ST77XX_WHITE);
  displaySettings(10,70,2,ST77XX_WHITE);
  displayONorOFF(85,30,2,ST77XX_WHITE);
}

void displayClockSettings(){
  tft.fillScreen(ST77XX_BLUE);
  //Hours
  tft.setCursor(30,30);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(h);
  // :
  tft.setCursor(45,30);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(":");
  //Minutes
  tft.setCursor(58,30);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(m);
  //HoursI
  tft.setCursor(5,60);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(HauxI);
  // :
  tft.setCursor(25,60);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(":");
  //MinutesI
  tft.setCursor(33,60);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(MauxI);
  //Rect to chooce
  tft.drawRect(56,60,10,20,ST77XX_GREEN);
  if(timemode==1){
    tft.fillRect(57,61,9,19,ST77XX_WHITE);
  }else tft.fillRect(57,61,9,19,ST77XX_BLUE);
  //HoursF
  tft.setCursor(68,60);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(HauxF);
  // :
  tft.setCursor(92,60);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(":");
  //MinutesF
  tft.setCursor(100,60);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print(MauxF);
  

  //Back
  tft.setCursor(20,100);
  tft.setTextColor(ST77XX_WHITE);
  tft.setTextSize(2);
  tft.print("back");
}

//Rect choose option
void rectClock(int posi){
  if(posi==0){
    displayClockSettings();
    tft.drawRect(22,28,12,10,ST77XX_RED);
  }
  if(posi==1){
    displayClockSettings();
    tft.drawRect(42,28,12,10,ST77XX_RED);
  }
  if(posi==2){ // aim to HauxI 
    displayClockSettings();
    tft.drawRect(2,58,20,20,ST77XX_RED);
  }
  if(posi==3){ // aim to MauxI 
    displayClockSettings();
    tft.drawRect(30,58,20,20,ST77XX_RED);
  }
  if(posi==4){ // aim to toggle timemode
    displayClockSettings();
    tft.drawRect(58,62,8,18,ST77XX_RED);
  }
  if(posi==5){ // aim to HauxF
    displayClockSettings();
    tft.drawRect(66,58,20,20,ST77XX_RED);
  }
  if(posi==6){ // aim to MauxF
    displayClockSettings();
    tft.drawRect(98,58,20,20,ST77XX_RED);
  }
  if(posi==7){ // aim to back
    displayClockSettings();
    tft.drawRect(20,98,60,24,ST77XX_RED);
  }
}

//Choice Clock Settings
int waitClock(unsigned long time){
  currentMillis=millis();
  unsigned long fim= currentMillis+time;
  while(currentMillis<fim){
    int checkAlarm = AlarmTime();
    Alarme(checkAlarm);
    //ldr
    if(ldrmode==1){
      int ldr=analogRead(A0);
      if(ldr<20){
        luz=0;
      }else luz=1;
    }else luz=1;
    if(digitalRead(botaoAlarm)){
      return 0;
    }
    if(digitalRead(botaoSettings)){
      return 1;
    }
    currentMillis=millis();
    
  }
  return 9;
}



// ALARM FUNCTIONS
void Alarme(int checkAlarm){
    int dist=measureDistance();
    if(modoAlarme==1){
      while(dist<30 && dist != 0){
        playNote(notes[0],beats[0]*tempo);
        dist=measureDistance();
        delay(1000);
        ReportHour[alarmNum]=h;
        ReportMin[alarmNum]=m;
        ReportDay[alarmNum]=d;
        ReportNum=ReportNum+1;
        alarmNum++;
        delay(1800);
      }
    }
    delay(100);
    if(timemode==1 && checkAlarm==1){
      int dist=measureDistance();
      while(dist<30 && dist != 0){
        playNote(notes[0],beats[0]*tempo);
        dist=measureDistance();
        delay(1000);
        ReportHour[alarmNum]=h;
        ReportMin[alarmNum]=m;
        ReportDay[alarmNum]=d;
        ReportNum=ReportNum+1;
        alarmNum++;
        delay(1800);
      }
    }
    if(luz==0){
      int dist=measureDistance();
      while(dist<30 && dist != 0){
        playNote(notes[0],beats[0]*tempo);
        dist=measureDistance();
      }
    }
    return;
}


int AlarmTime(){
  delay(50);
  if(HauxI==h && HauxF>=h){ // 7:30 < 7:40 < 11:00
    if(m>=MauxI){
      return 1;
    }
  }
  if(HauxI==h && HauxF==h){   // 7:30 < 7:55 < 7:56
    if(MauxI<=m && m<=MauxF){
      return 1;
    }
  }
  if(HauxI<=h && HauxF==h){ // 7:30 < 11:07 < 11:10
    if(m<=MauxF){
      return 1;
    }
  }
  if(HauxI<h){       // 7:30 < 8:20 < 11:10
    if(HauxF>h){
     return 1; 
    }
  }
  else return 0;

}

//WAIT FOR PRESS
bool detect_press(){
  static int buttonState = LOW; //initialize once in LOW
  bool pressed = false;
  int newbuttonState = digitalRead(botaoAlarm); //pressed->unpressed (button lifted)
  if (buttonState == HIGH && newbuttonState == LOW){
    //Serial.println("Press detected. Switch mode");
    switch_mode(); //change mode!
    pressed = true;
  }
  buttonState=newbuttonState; //keep track of button state
  return pressed;
}

void switch_mode(){
  if(modoAlarme == 0){
  modoAlarme = 1;
  }else{
  modoAlarme = 0;
}
}

int waitB(unsigned long time){
  currentMillis=millis();
  unsigned long fim= currentMillis+time;
  unsigned long agora = millis();
  //Serial.print("fimB:");
  //Serial.println(fim);
  while(currentMillis<fim){
    //ldr
    if(ldrmode==1){
      int ldr=analogRead(A0);
      if(ldr<20){
        luz=0;
      }else luz=1;
    }else luz=1;
    
    //CLOCK
    if(currentMillis>agora+1000){
      s=s+1;
      agora=millis();
      //Serial.print("seconds :");
      //Serial.println(s);
      if(s==60){
        s=0;
        m=m+1;
      }
    }
    if(m==60){
      m=0,
      h=h+1;
    }
    if(h==24){
      h=0;
      d=d+1;
    }
    
    // Trigger alarm if its on
    int checkAlarm = AlarmTime();
    Alarme(checkAlarm);
    
    displayClock();
    if(digitalRead(botaoAlarm)){
      return 0;
    }
    if(digitalRead(botaoSettings)){
      return 1;
    }
    currentMillis=millis();
    
  }
  return 9;
}


// 1 Waiting Menu choose 
int wait(unsigned long time){
  
  //DISPLAY START MENU and CLOCK , WAIT FOR A CHOICE 
  startMenu();

  

  currentMillis=millis();
  unsigned long fim= currentMillis+time;
  unsigned long agora = millis();
  while(currentMillis<fim){
    //ldr
    if(ldrmode==1){
      int ldr=analogRead(A0);
      if(ldr<20){
        startMenu();
        luz=0;
      }else luz=1;
      int x=0;
      while(x==0){
        startMenu();
        x=1;
      }
    }else luz=1;
    
    //CLOCK
    if(currentMillis>agora+1000){
      s=s+1;
      agora=millis();
      if(s==60){
        s=0;
        m=m+1;
      }
    }
    if(m==60){
      m=0,
      h=h+1;
    }
    if(h==24){
      h=0;
      d=d+1;
    }
    
    //Alarm function 
    int checkAlarm = AlarmTime();
    Alarme(checkAlarm);

    //Display and update clock
    displayClock();
    

    if(detect_press()){
      return 6;
    }
    if(digitalRead(botaoSettings)){
      return 7;
    }
    currentMillis=millis();
    
  }
  return 0;
}

// Rectangle sorround the option controlled by button
void rect(int pos){
  if(pos==0){
    settingsMenu();
    tft.drawRect(5,25,85,20,ST77XX_RED);
  }
  if(pos==1){
    settingsMenu();
    tft.drawRect(5,55,70,20,ST77XX_RED);
  }
  if(pos==2){
    settingsMenu();
    tft.drawRect(5,85,70,20,ST77XX_RED);
  }
  if(pos==3){
    settingsMenu();
    tft.drawRect(5,105,50,15,ST77XX_RED);
  }
}

//MAIN CODE
void loop() {
  //tft.drawRGBBitmap(0, 0, background, 480, 320);
  
  // Start Menu
  startMenu();


  //settingsMenu();
  //rect(0);
  
  // Start variables 
  int dist=measureDistance();
  int pos=0;
  int aguarde=0;
  int aguardeB=0;
  int endSettings=0;
  // Wait for a choice
  aguarde = wait(10000000); // will receive 6 if alarm button was press and 7 to go settings
  
  // Alarm mode is toggle on and off once the button is pressed
  int checkAlarm = AlarmTime();
  Alarme(checkAlarm);

  // In case you press settings button
  if(aguarde == 7){
    settingsMenu();
    //Now have to wait for another choice
    //This loop will only end when press choice is choosen
    while(endSettings==0){
      rect(pos);
      aguardeB=waitB(1000000);
      //change option with settings button
      if(aguardeB==1){
        pos=pos+1;
        if(pos==4){
          pos=0;
        }
      }
      //Serial.print("pos : ");
      //Serial.println(pos);
      // select option with alarm button
      if(aguardeB==0){
        if(pos==0){ // Report
          ReportMenu();
          int endReport=0;
          while(endReport==0){
            int choiceReport=waitB(50000);
            if(choiceReport==1){
              endReport=1;
            }
          }
        }
        if(pos==1){ // Night
          if(ldrmode==0){
            ldrmode=1;
          }else{
            ldrmode=0;
            luz=1;
          }
        }
        if(pos==2){ // Clock
          int posi=0, endClock=0;
          displayClockSettings(); //Show Clock Settings
          rectClock(posi); // Show where you are aiming
          while(endClock==0){
            int choiceClock=waitClock(50000);
            if(choiceClock==1){ // Next choice
              posi=posi+1;
              if(posi==8){
                posi=0;
              }
              rectClock(posi);
            }
            //Serial.print("posi: ");
            //Serial.println(posi);
            if(choiceClock==0){ // When you click to chance
              if(posi==0){
                h=h+1; //update hours
                if(h==24){
                  h=0;
                }
                displayClockSettings();
              }
              if(posi==1){
                m=m+1; // update minutes
                if(m==60){
                  m=0;
                }
                displayClockSettings();
              }
              if(posi==2){
                HauxI=HauxI+1;
                if(HauxI==24){
                  HauxI=0;
                }
                displayClockSettings();
              }
              if(posi==3){
                MauxI=MauxI+1;
                if(MauxI==60){
                  MauxI=0;
                }
                displayClockSettings();
              }
              if(posi==4){
                if(timemode==0){
                  timemode=1;
                }else timemode=0;
                tft.fillRect(57,61,9,19,ST77XX_WHITE);
                displayClockSettings();
              }
              if(posi==5){
                HauxF=HauxF+1;
                if(HauxF==24){
                  HauxF=0;
                }
                displayClockSettings();                
              }
              if(posi==6){
                MauxF=MauxF+1;
                if(MauxF==60){
                  MauxF=0;
                }
                displayClockSettings();
              }
              if(posi==7){
                endClock=1;
              }
            }
          }
        }
        if(pos==3){ // Back
          endSettings=1;
          startMenu();
        }
      }

    }
  }
}